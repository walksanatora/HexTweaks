plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
    runs {
        gameTest {
            inherit client
            name "Game Test"
            vmArg "-Dfabric-api.gametest"
            vmArg "-Dfabric-api.gametest.report-file=${project.buildDir}/junit.xml"
            runDir "build/gametest"
        }
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
    mavenCentral()
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {
        url = uri("${project.projectDir}/libs")
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    modImplementation "at.petra-k.hexcasting:hexcasting-fabric-1.20.1:${rootProject.hexcasting_version}"
    modImplementation "cc.tweaked:cc-tweaked-${rootProject.minecraft_version}-fabric:${rootProject.cct_version}"
    modRuntimeOnly "maven.modrinth:ducky-periphs:FYDI2Gut"
    modRuntimeOnly "maven.modrinth:inline:Bskomaui"
    //modRuntimeOnly "maven.modrinth:gu7yAYhd:Scean3uO"

    //hecasting deps
    modImplementation files("${rootProject.rootDir}/libs/serialization-hooks-0.4.99999.jar")
    modImplementation "vazkii.patchouli:Patchouli:${rootProject.patchouli_version}-FABRIC"
    modImplementation "net.fabricmc:fabric-language-kotlin:1.10.17+kotlin.1.9.22"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${rootProject.cca_version}"
    modImplementation "at.petra-k.paucal:paucal-fabric-${rootProject.minecraft_version}:${rootProject.paucal_version}"
    modApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //  modImplementation files("${rootProject.rootDir}/libs/hexal-fabric-1.20.1-0.3.0-2.jar")
    modCompileOnly files("${rootProject.rootDir}/libs/hexal-fabric-1.20.1-0.3.0-2.jar")

    modImplementation("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
    implementation("com.eliotlash.mclib:mclib:20")

    modRuntimeOnly files("${rootProject.rootDir}/libs/moreiotas-fabric-1.20.1-0.1.0-4.jar")
    implementation group: "org.jblas", name: "jblas", version: "1.2.5" //moreiotas crashes without this sometimes
    //modRuntimeOnly "maven.modrinth:8BmcQJ2H:KyRLWNQb"

    //modCompileOnly ("com.github.dafuqs:spectrum:1.20.1-main-SNAPSHOT")
    modCompileOnly ("curse.maven:spectrum-556967:5628619")
    modCompileOnly ("maven.modrinth:revelationary:${project.revelationary_version}")
    modCompileOnly "com.sk89q.worldedit:worldedit-fabric-mc1.20:7.3.0-SNAPSHOT"
    modRuntimeOnly "curse.maven:worldedit-225608:4586218"

//    modImplementation "com.github.DaFuqs:Spectrum:1.20.1-main-SNAPSHOT"
//    modRuntimeOnly ("dev.emi:trinkets:${project.trinkets_version}") //
//    modRuntimeOnly ("maven.modrinth:Revelationary:${rootProject.revelationary_version}") //
//    modRuntimeOnly ("maven.modrinth:AdditionalEntityAttributes:${rootProject.additional_entity_attributes_version}") //
//    modRuntimeOnly ("com.github.DaFuqs:Arrowhead:${rootProject.arrowhead_version}") //
//    modRuntimeOnly ("com.github.DaFuqs:DimensionalReverb:${rootProject.dimensional_reverb_version}") //
//    modRuntimeOnly ("maven.modrinth:fractal-lib:${rootProject.fractal_version}") //
//    modRuntimeOnly ("com.github.devs-immortal:Incubus-Core:${project.incubus_core_version}")
//    modRuntimeOnly ("com.github.emilyploszaj:step-height-entity-attribute:${project.step_height_attribute_version}")
//    modRuntimeOnly ("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")

    modRuntimeOnly "maven.modrinth:cc-androids:GEMYgmf8" //our new AI overlords should be able to hexcast. it is only fair as the superior life form
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
