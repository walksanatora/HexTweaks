architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/examplemod.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
    modCompileOnly "cc.tweaked:cc-tweaked-${rootProject.minecraft_version}-fabric:${rootProject.cct_version}"
    modCompileOnly "org.squiddev:Cobalt:0.7.3"
    //modCompileOnly "maven.modrinth:ducky-periphs:FYDI2Gut"
    modImplementation "vazkii.patchouli:Patchouli:${rootProject.patchouli_version}-FABRIC"
    modCompileOnly files("${rootProject.rootDir}/libs/hexal-fabric-1.20.1-0.3.0-2.jar")
    modImplementation files("${rootProject.rootDir}/libs/moreiotas-fabric-1.20.1-0.1.0-4.jar")
    compileOnly group: "org.jblas", name: "jblas", version: "1.2.5"
    modCompileOnly("maven.modrinth:plethora-peripherals:5pxGGDeh") // yes plethora is something we depend on... kinda
    modCompileOnly("com.sk89q.worldedit:worldedit-core:7.3.0-SNAPSHOT")
    modCompileOnly("maven.modrinth:cc-androids:GEMYgmf8") //our new AI overlords should be able to hexcast. it is only fair as the superior life form
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
